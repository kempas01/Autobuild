name: Automate Docker Image Build 

# Controls when the workflow will run
on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - main
    paths:  
      - 'input.yaml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      
      - name: Install Python Dependancies
        run: pip install pyyaml
      
      - name: Parsing YAML & setting Env Variables
        run: python parsing.py
        
      - name: Env values
        run: |
          echo " ROS Baselayername = $ros_Baselayername"
          echo " ROS Baselayertag = $ros_Baselayertag "
          echo " ROS Version = $ros_R_VERSION "
          echo " ROS Buildlayername = $rdepth_Build_layer_name "
          echo " ROS Buildlayertag = $ros_Build_layer_tag "
          echo " Rdepth Baselayername = $rdepth_Baselayername "
          echo " Rdepth Baselayertag = $rdepth_Baselayertag "
          echo " Rdepth Buildlayername = $rdepth_Build_layer_name "
          echo " Rdepth Buildlayertag = $rdepth_Build_layer_tag "
          echo " Rbase Buildlayertag = $rbase_Build_layer_tag "
          echo " Rbase Env = $rbase_Env_R "
          echo " Rfull Env = $rfull_Env_R "
          echo " Rfull EnvRver = $rfull_Env_R_ver "
          echo " Rfull Drivers = $rfull_Env_Drivers  "
          echo " ROS Baselayername = $ros_Baselayertag"
          
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile  # Path to your Dockerfile
          push: true
          tags: |
            docker.io/bvdoc/my-project:img1
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
